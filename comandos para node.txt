npm i dotenv express promise-mysql
npm i @babel/cli @babel/core @babel/node @babel/preset-env morgan nodemon -D 


// aqui esta tambien el script para la base de datos que hice de prueba para ver si funciona esta API

create database mofly;

use mofly;

create table user(
id int not null auto_increment primary key,
name varchar(30) not null,
status varchar(15) not null  
);

insert into user values
(1,"Juan Carlos Gonzalez", "Activo"),
(2,"Leonardo Saul Avila", "Activo"),
(3,"Adan Tapia", "Activo");




//en postman pueden validar si la API funciona una vez que hayan creado la base de datos, 
ojo primero chequen en el archivo llamado .env que sus credenciales en la db sean los que estan ahi guardados, si no cambienlos a los suyos
es decir, 
user = root
password = server (en mi caso, en el suyo si no tiene password no le pongan nada)


Ahora vayan a postman

usando GET
localhost:4000/api/users 
:esto llamara al metodo getUsers del archivo Users.controller.js

usando GET
localhost:4000/api/users/1 
:esto llamara al metodo getUser del archivo Users.controller.js, si desean consultar otro user cambien el numero de id que esta al final de la URL

usando POST
localhost:4000/api/users 
:esto llamara al metodo addUser del archivo Users.controller.js
a la opcion
boddy --> raw --> JSON
e ingresan los datos a enviar:
{
    "id":"4",
    "name":"Jose:,
    "status":"Activo"
}


usando PUT
localhost:4000/api/users/1 
:esto llamara al metodo updateUser del archivo Users.controller.js, si desean actualizar otro user cambien el numero de id que esta al final de la URL


usando DELETE
localhost:4000/api/users/1 
:esto llamara al metodo deleteUser del archivo Users.controller.js, si desean eliminar otro user cambien el numero de id que esta al final de la URL